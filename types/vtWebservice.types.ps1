# Custom Type Definitions for vtWebservice Module

# Define custom types for better object representation and formatting
Update-TypeData -TypeName 'vtWebservice.Field' -DefaultDisplayPropertySet @('Name', 'Label', 'Type', 'Mandatory') -Force

Update-TypeData -TypeName 'vtWebservice.Record' -DefaultDisplayPropertySet @('id', 'assigned_user_id', 'createdtime', 'modifiedtime') -Force

Update-TypeData -TypeName 'vtWebservice.QueryResult' -DefaultDisplayPropertySet @('id', 'label', 'module') -Force

# Add custom methods to vtWebservice.Field objects
Update-TypeData -TypeName 'vtWebservice.Field' -MemberType ScriptMethod -MemberName 'IsRequired' -Value {
    return $this.Mandatory -eq $true
} -Force

Update-TypeData -TypeName 'vtWebservice.Field' -MemberType ScriptMethod -MemberName 'ToString' -Value {
    return "$($this.Name) ($($this.Type))"
} -Force

# Check if field is editable
Update-TypeData -TypeName 'vtWebservice.Field' -MemberType ScriptMethod -MemberName 'IsEditable' -Value {
    return $this.Editable -eq $true
} -Force

# Check if field is read-only
Update-TypeData -TypeName 'vtWebservice.Field' -MemberType ScriptMethod -MemberName 'IsReadOnly' -Value {
    return $this.Editable -eq $false
} -Force

# Check if field is a reference/lookup field
Update-TypeData -TypeName 'vtWebservice.Field' -MemberType ScriptMethod -MemberName 'IsReference' -Value {
    return $this.Type -in @('reference', 'owner')
} -Force

# Check if field is a date/time field
Update-TypeData -TypeName 'vtWebservice.Field' -MemberType ScriptMethod -MemberName 'IsDateTime' -Value {
    return $this.Type -in @('date', 'datetime')
} -Force

# Check if field is a picklist field
Update-TypeData -TypeName 'vtWebservice.Field' -MemberType ScriptMethod -MemberName 'IsPicklist' -Value {
    return $this.Type -in @('picklist', 'multipicklist')
} -Force

# Check if field is a text field (string or text)
Update-TypeData -TypeName 'vtWebservice.Field' -MemberType ScriptMethod -MemberName 'IsText' -Value {
    return $this.Type -in @('string', 'text')
} -Force

# Check if field is a contact field (phone, email, url)
Update-TypeData -TypeName 'vtWebservice.Field' -MemberType ScriptMethod -MemberName 'IsContact' -Value {
    return $this.Type -in @('phone', 'email', 'url')
} -Force

# Check if field is auto-generated (like ID fields)
Update-TypeData -TypeName 'vtWebservice.Field' -MemberType ScriptMethod -MemberName 'IsAutoGenerated' -Value {
    return $this.Type -eq 'autogenerated'
} -Force

# Check if field is a boolean field
Update-TypeData -TypeName 'vtWebservice.Field' -MemberType ScriptMethod -MemberName 'IsBoolean' -Value {
    return $this.Type -eq 'boolean'
} -Force

# Get field category for grouping
Update-TypeData -TypeName 'vtWebservice.Field' -MemberType ScriptMethod -MemberName 'GetCategory' -Value {
    switch ($this.Type)
    {
        'string' { return 'Text' }
        'text' { return 'Text' }
        'email' { return 'Contact' }
        'phone' { return 'Contact' }
        'url' { return 'Contact' }
        'date' { return 'DateTime' }
        'datetime' { return 'DateTime' }
        'boolean' { return 'Boolean' }
        'picklist' { return 'Selection' }
        'multipicklist' { return 'Selection' }
        'reference' { return 'Reference' }
        'owner' { return 'Reference' }
        'autogenerated' { return 'System' }
        default { return 'Other' }
    }
} -Force

# Check if field can be used in queries/filters
Update-TypeData -TypeName 'vtWebservice.Field' -MemberType ScriptMethod -MemberName 'IsFilterable' -Value {
    # Most fields are filterable except large text fields
    return $this.Type -ne 'text' -and $this.Type -ne 'autogenerated'
} -Force

# Get a user-friendly description of the field
Update-TypeData -TypeName 'vtWebservice.Field' -MemberType ScriptMethod -MemberName 'GetDescription' -Value {
    $desc = $this.DisplayName
    if ($this.IsRequired()) { $desc += ' (Required)' }
    if ($this.IsReadOnly()) { $desc += ' (Read-Only)' }
    return $desc
} -Force

# Get validation info
Update-TypeData -TypeName 'vtWebservice.Field' -MemberType ScriptMethod -MemberName 'GetValidationInfo' -Value {
    $info = @{
        Name       = $this.Name
        Type       = $this.Type
        Required   = $this.IsRequired()
        Editable   = $this.IsEditable()
        Category   = $this.GetCategory()
        Filterable = $this.IsFilterable()
    }
    return [PSCustomObject]$info
} -Force

# Add custom properties
Update-TypeData -TypeName 'vtWebservice.Field' -MemberType ScriptProperty -MemberName 'DisplayName' -Value {
    if ($this.Label) { return $this.Label } else { return $this.Name }
} -Force

# Quick access to field status
Update-TypeData -TypeName 'vtWebservice.Field' -MemberType ScriptProperty -MemberName 'Status' -Value {
    $status = @()
    if ($this.IsRequired()) { $status += 'Required' }
    if ($this.IsReadOnly()) { $status += 'ReadOnly' }
    if ($this.IsAutoGenerated()) { $status += 'AutoGen' }
    return ($status -join ', ')
} -Force

# Get field type category
Update-TypeData -TypeName 'vtWebservice.Field' -MemberType ScriptProperty -MemberName 'Category' -Value {
    return $this.GetCategory()
} -Force

Write-PSFMessage -Level Verbose -Message "Custom type definitions loaded for vtWebservice module"
